-- Initialize visitor counts, stored in files to persist between server restarts
local homeVisitCount = 0
local dynamicCounterVisitCount = 0

-- Trivia game data
local triviaQuestions = {
    { question = "The Minecraft world is infinite. True or False?", answer = "False" },
    { question = "Creepers were originally a coding bug. True or False?", answer = "True" },
    { question = "Diamonds can be mined with a wooden pickaxe. True or False?", answer = "False" },
}
local currentQuestionIndex = 1
local playerScores = {}
local triviaFeedback = "" -- Initialize feedback variable

-- Function to read the visitor count for the homepage
local function readHomeVisitCount()
    local file = fs.open("homeVisitCount.txt", "r")
    if file then
        homeVisitCount = tonumber(file.readAll()) or 0
        file.close()
    end
end

-- Function to save the visitor count for the homepage
local function saveHomeVisitCount()
    local file = fs.open("homeVisitCount.txt", "w")
    if file then
        file.write(tostring(homeVisitCount))
        file.close()
    end
end

-- Function to read the visit count for the dynamicCounter page
local function readDynamicCounterVisitCount()
    local file = fs.open("dynamicCounterVisitCount.txt", "r")
    if file then
        dynamicCounterVisitCount = tonumber(file.readAll()) or 0
        file.close()
    end
end

-- Function to save the visit count for the dynamicCounter page
local function saveDynamicCounterVisitCount()
    local file = fs.open("dynamicCounterVisitCount.txt", "w")
    if file then
        file.write(tostring(dynamicCounterVisitCount))
        file.close()
    end
end

-- Read the current visit counts when the server starts
readHomeVisitCount()
readDynamicCounterVisitCount()

function getDynamicLine(name, page)
    if name == "visitorCounter" then
        homeVisitCount = homeVisitCount + 1
        saveHomeVisitCount()  -- Update the count in the file
        return "^f2This page has been visited " .. homeVisitCount .. " times."
    elseif name == "visitCount" then
        dynamicCounterVisitCount = dynamicCounterVisitCount + 1
        saveDynamicCounterVisitCount()  -- Update the count in the file
        return "^f2This page has been visited " .. dynamicCounterVisitCount .. " times."
    elseif name == "triviaQuestion" then
        return "^f5" .. triviaQuestions[currentQuestionIndex].question .. "^f0"
    elseif name == "triviaScore" then
        local score = playerScores[page] or 0
        return "^f9" .. score .. "^f0"
    elseif name == "triviaFeedback" then
        return triviaFeedback
    end
    return "" -- Default return to avoid unintended output
end

-- Function to handle dynamic input from the dialog box
function takeDynamicInput(_, input)
    input = tostring(input) -- Ensure input is treated as a string

    -- Handle the trivia answer
    local answer = input:lower()  
    if answer == "true" or answer == "false" then
        local correctAnswer = triviaQuestions[currentQuestionIndex].answer:lower()
        if answer == correctAnswer then
            playerScores['score'] = (playerScores['score'] or 0) + 1
            triviaFeedback = "^f5Correct! Your score is now " .. playerScores['score'] .. "."
        else
            triviaFeedback = "^fEIncorrect! The correct answer was " .. correctAnswer .. "."
        end
        -- Move to the next question
        currentQuestionIndex = currentQuestionIndex % #triviaQuestions + 1
    else
        triviaFeedback = "^fEInvalid input! Please type 'True' or 'False'."
    end
end
